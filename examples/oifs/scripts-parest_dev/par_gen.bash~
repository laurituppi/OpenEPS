#!/bin/bash
# This version uses Python version of EPPES.
#module load biopython-env
#module load python-env/2.7.10

date=${1}

# Log
echo `date +%H:%M:%S` pargener "ens   " >> $WORK/master.log

# There are two options how to generate cost func values.

# 1. Generate random cost func values
if [ 0 -eq 1 ]; then
# Set up an awk function for real number calculations
rcalc() { awk "BEGIN{print $*}"; }

# Generate random parameter values for each ens member
# $RANDOM â‚¬ {0 .. 32767}
#
rm -f $DATA/eppes/scores.dat
for imem in $(seq 1 $ENS); do
    imem=$(printf "%03d" $imem)
	    
    number=$RANDOM
    number=$(rcalc $number/32767.-0.5)
    # Scale and add to default value (ENTSHALP=2.0)
    number=$(rcalc $number*0.1+2.0)

    echo $number >> $DATA/eppes/scores.dat
done
fi

# 2. Use global dry total energy norm as cost function.
if [ 1 -eq 1 ]; then
rm -f $DATA/eppes/scores.dat
#module load python-env/2.7.10
module load python/2.7.13-gnu620
for imem in $(seq 1 $ENS); do
    imem=$(printf "%03d" $imem)
    step=$(printf "%06d" $FCLEN)
    #echo 'FCLEN= ' $FCLEN ' FCLEN2= ' $FCLEN2 ' ENS= ' $ENS ' ENS2= ' $ENS2
    # *** command line arguments for DTEN.py ***
    # See details in commentation of DTEN.py.
    forecast_SH=$DATA/$date/pert$imem/PPSH_${EXPS}+$step.nc
    forecast_GG=$DATA/$date/pert$imem/PPGG_${EXPS}+$step.nc
    #ref_timestep=$(((number_of_ensemble-1)*4+13)) #7
    ref_timestep=-1 #$(((number_of_ensemble+4)*4+13))
    echo 'number of ensemble = ' $number_of_ensemble
    echo 'timestep in reference file = ' $ref_timestep
    #ref_timestep=$(((number_of_ensemble-1)*4-1))
    reference_SH=$DATA/$date/pert000/PPSH_${EXPS}+$step.nc
    #reference_SH=/wrk/lautuppi/DONOTREMOVE/analyses/an_data_oper_2011_1Apr_T255L91.nc
    reference_GG=$DATA/$cdate/pert000/PPGG_${EXPS}+$step.nc
    #reference_GG=/wrk/lautuppi/DONOTREMOVE/analyses/an_data_oper_2011_1Apr_T255L91.nc
    outputdir=$DATA/$cdate/pert$imem
    calcstyle=1
    scale=1 #150.0
    # *** ***
    # calculate cost fuction values
    python $SCRI/MTEN.py $forecast_SH $forecast_GG $ref_timestep $reference_SH $reference_GG $outputdir $calcstyle $scale
    #python $SCRI/DTEN_an.py $forecast_SH $forecast_GG $ref_timestep $reference_SH $reference_GG $outputdir $scale
    score=$(sed -n '1p' < $DATA/$date/pert$imem/score.dat)
    echo $score >> $DATA/eppes/scores.dat
done
fi


# Parameter perturbations
#
pushd $DATA/eppes > /dev/null
cp -f sampleout.dat oldsample.dat
#./eppes_routine
module load biopython-env
python eppesroutine.py eppes.cfg

# Store values
for item in mu sig n w; do
    cp -f ${item}file.dat $date/.
done
cp -f sampleout.dat $date/.
mv -f scores.dat $date/.
mv -f winfo.dat $date/.

popd > /dev/null

